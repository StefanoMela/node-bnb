// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  name         String
  lastName     String
  dateOfBirth  DateTime
  username     String        @unique
  email        String        @unique
  password     String
  avatar       String?
  houses       House[]
  messages     Message[]
  sponsorships Sponsorship[]
  created_at   DateTime      @default(now())
  updated_at   DateTime      @default(now())
}

model House {
  id           Int           @id @default(autoincrement())
  title        String
  description  String
  images       Image[]
  pricePerDay  Int
  rooms        Int
  beds         Int
  baths        Int
  squareMeters Int
  address      String
  latitude     Float?
  longitude    Float?
  amenities    Amenity[]
  visible      Boolean       @default(true)
  user         User          @relation(fields: [userId], references: [id])
  userId       Int
  created_at   DateTime      @default(now())
  updated_at   DateTime      @default(now())
  messages     Message[]
  sponsorships Sponsorship[]
}

model Image {
  id         Int      @id @default(autoincrement())
  url        String
  house      House    @relation(fields: [houseId], references: [id])
  houseId    Int
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

model Message {
  id         Int      @id @default(autoincrement())
  content    String
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  house      House    @relation(fields: [houseId], references: [id])
  houseId    Int
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

model Amenity {
  id         Int      @id @default(autoincrement())
  name       String
  house      House    @relation(fields: [houseId], references: [id])
  houseId    Int
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

model Sponsorship {
  id         Int      @id @default(autoincrement())
  startDate  DateTime
  endDate    DateTime
  house      House    @relation(fields: [houseId], references: [id])
  houseId    Int
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}
